
// This file has been generated by the GUI designer. Do not modify.

public partial class MainWindow
{
	private global::Gtk.UIManager UIManager;
	
	private global::Gtk.Action newAction;
	
	private global::Gtk.Action openAction;
	
	private global::Gtk.Action saveAction;
	
	private global::Gtk.Action FileMenu;
	
	private global::Gtk.Action New;
	
	private global::Gtk.Action Open;
	
	private global::Gtk.Action Save;
	
	private global::Gtk.Action saveAction1;
	
	private global::Gtk.Action Quit;
	
	private global::Gtk.Action SaveAs;
	
	private global::Gtk.Action TestMenu;
	
	private global::Gtk.Action Help;
	
	private global::Gtk.Action Help1;
	
	private global::Gtk.Action About;
	
	private global::Gtk.Action dialogQuestionAction;
	
	private global::Gtk.Action testCompileAction;
	
	private global::Gtk.Action undoAction;
	
	private global::Gtk.Action addAction;
	
	private global::Gtk.Action addAnswerTrueAction;
	
	private global::Gtk.Action redoAction;
	
	private global::Gtk.Action testDecompileAction;
	
	private global::Gtk.Action quitAction1;
	
	private global::Gtk.Action Edit;
	
	private global::Gtk.Action Undo;
	
	private global::Gtk.Action Redo;
	
	private global::Gtk.Action Cut;
	
	private global::Gtk.Action Copy;
	
	private global::Gtk.Action Paste;
	
	private global::Gtk.Action TestCompile;
	
	private global::Gtk.Action TestDecompile;
	
	private global::Gtk.Action TestTitle;
	
	private global::Gtk.Action setAuthorAction;
	
	private global::Gtk.Action addValueAction;
	
	private global::Gtk.Action AddQuestion;
	
	private global::Gtk.Action addAnswer;
	
	private global::Gtk.Action AddAnswerTrue;
	
	private global::Gtk.Action SetQuestionValue;
	
	private global::Gtk.Action removeAction;
	
	private global::Gtk.Action deleteQuestion;
	
	private global::Gtk.Action rmQuestion;
	
	private global::Gtk.Action rmAnswer;
	
	private global::Gtk.Action sortAscendingAction;
	
	private global::Gtk.ToggleAction TestModeAction;
	
	private global::Gtk.ToggleAction setTestMode;
	
	private global::Gtk.Action setTestTime;
	
	private global::Gtk.VBox vbox3;
	
	private global::Gtk.MenuBar MainMenu;
	
	private global::Gtk.Toolbar ToolBar;
	
	private global::Gtk.VPaned vpaned1;
	
	private global::Gtk.ScrolledWindow GtkScrolledWindow;
	
	private global::Gtk.TreeView QuestionEditArea;
	
	private global::Gtk.ScrolledWindow GtkScrolledWindow1;
	
	private global::Gtk.TreeView AnswersEditArea;
	
	private global::Gtk.Statusbar statusbar1;
	
	private global::Gtk.VSeparator vseparator2;
	
	private global::Gtk.Label lblTestMode;
	
	private global::Gtk.VSeparator vseparator1;
	
	private global::Gtk.Label lblTestTime;

	protected virtual void Build ()
	{
		global::Stetic.Gui.Initialize (this);
		// Widget MainWindow
		this.UIManager = new global::Gtk.UIManager ();
		global::Gtk.ActionGroup w1 = new global::Gtk.ActionGroup ("Default");
		this.newAction = new global::Gtk.Action ("newAction", null, global::Mono.Unix.Catalog.GetString ("Новый тест"), "gtk-new");
		this.newAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Новый");
		w1.Add (this.newAction, null);
		this.openAction = new global::Gtk.Action ("openAction", global::Mono.Unix.Catalog.GetString ("_Открыть"), global::Mono.Unix.Catalog.GetString ("Открыть тест"), "gtk-open");
		this.openAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Открыть");
		w1.Add (this.openAction, null);
		this.saveAction = new global::Gtk.Action ("saveAction", global::Mono.Unix.Catalog.GetString ("_Сохранить"), global::Mono.Unix.Catalog.GetString ("Сохранить тест"), "gtk-save");
		this.saveAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Сохранить");
		w1.Add (this.saveAction, null);
		this.FileMenu = new global::Gtk.Action ("FileMenu", global::Mono.Unix.Catalog.GetString ("Файл"), null, null);
		this.FileMenu.ShortLabel = global::Mono.Unix.Catalog.GetString ("Файл");
		w1.Add (this.FileMenu, null);
		this.New = new global::Gtk.Action ("New", global::Mono.Unix.Catalog.GetString ("Новый"), null, "gtk-new");
		this.New.ShortLabel = global::Mono.Unix.Catalog.GetString ("Новый");
		w1.Add (this.New, null);
		this.Open = new global::Gtk.Action ("Open", global::Mono.Unix.Catalog.GetString ("Открыть"), null, "gtk-open");
		this.Open.ShortLabel = global::Mono.Unix.Catalog.GetString ("Открыть");
		w1.Add (this.Open, null);
		this.Save = new global::Gtk.Action ("Save", global::Mono.Unix.Catalog.GetString ("Сохранить"), null, "gtk-save");
		this.Save.ShortLabel = global::Mono.Unix.Catalog.GetString ("Сохранить");
		w1.Add (this.Save, null);
		this.saveAction1 = new global::Gtk.Action ("saveAction1", global::Mono.Unix.Catalog.GetString ("Сохранить как..."), null, "gtk-save");
		this.saveAction1.ShortLabel = global::Mono.Unix.Catalog.GetString ("Сохранить как...");
		w1.Add (this.saveAction1, null);
		this.Quit = new global::Gtk.Action ("Quit", global::Mono.Unix.Catalog.GetString ("Выход"), null, "gtk-quit");
		this.Quit.ShortLabel = global::Mono.Unix.Catalog.GetString ("Выход");
		w1.Add (this.Quit, null);
		this.SaveAs = new global::Gtk.Action ("SaveAs", global::Mono.Unix.Catalog.GetString ("Сохранить как..."), null, "gtk-save");
		this.SaveAs.ShortLabel = global::Mono.Unix.Catalog.GetString ("Сохранить как...");
		w1.Add (this.SaveAs, null);
		this.TestMenu = new global::Gtk.Action ("TestMenu", global::Mono.Unix.Catalog.GetString ("Тест"), null, null);
		this.TestMenu.ShortLabel = global::Mono.Unix.Catalog.GetString ("Тест");
		w1.Add (this.TestMenu, null);
		this.Help = new global::Gtk.Action ("Help", global::Mono.Unix.Catalog.GetString ("Справка"), null, null);
		this.Help.ShortLabel = global::Mono.Unix.Catalog.GetString ("Справка");
		w1.Add (this.Help, null);
		this.Help1 = new global::Gtk.Action ("Help1", global::Mono.Unix.Catalog.GetString ("_Help"), null, "gtk-help");
		this.Help1.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Help");
		w1.Add (this.Help1, null);
		this.About = new global::Gtk.Action ("About", global::Mono.Unix.Catalog.GetString ("_About"), null, "gtk-about");
		this.About.ShortLabel = global::Mono.Unix.Catalog.GetString ("_About");
		w1.Add (this.About, null);
		this.dialogQuestionAction = new global::Gtk.Action ("dialogQuestionAction", global::Mono.Unix.Catalog.GetString ("Добавить вопрос"), global::Mono.Unix.Catalog.GetString ("Добавить вопрос"), "gtk-dialog-question");
		this.dialogQuestionAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Добавить вопрос");
		w1.Add (this.dialogQuestionAction, null);
		this.testCompileAction = new global::Gtk.Action ("testCompileAction", global::Mono.Unix.Catalog.GetString ("_Скомпоновать тест"), global::Mono.Unix.Catalog.GetString ("Скомпоновать тест"), "gtk-execute");
		this.testCompileAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Скомпоновать");
		w1.Add (this.testCompileAction, null);
		this.undoAction = new global::Gtk.Action ("undoAction", global::Mono.Unix.Catalog.GetString ("_Отмена"), null, "gtk-undo");
		this.undoAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Отмена");
		w1.Add (this.undoAction, null);
		this.addAction = new global::Gtk.Action ("addAction", global::Mono.Unix.Catalog.GetString ("Добавить _Ответ"), global::Mono.Unix.Catalog.GetString ("Добавить ответ"), "gtk-add");
		this.addAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Добавить _Ответ");
		w1.Add (this.addAction, null);
		this.addAnswerTrueAction = new global::Gtk.Action ("addAnswerTrueAction", global::Mono.Unix.Catalog.GetString ("_Правильный ответ"), null, "gtk-yes");
		this.addAnswerTrueAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Правильный ответ");
		w1.Add (this.addAnswerTrueAction, null);
		this.redoAction = new global::Gtk.Action ("redoAction", global::Mono.Unix.Catalog.GetString ("_Вернуть"), null, "gtk-redo");
		this.redoAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Вернуть");
		w1.Add (this.redoAction, null);
		this.testDecompileAction = new global::Gtk.Action ("testDecompileAction", global::Mono.Unix.Catalog.GetString ("_Декомпиляция"), global::Mono.Unix.Catalog.GetString ("Декомпилировать тест"), "gtk-refresh");
		this.testDecompileAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Декомпиляция");
		w1.Add (this.testDecompileAction, null);
		this.quitAction1 = new global::Gtk.Action ("quitAction1", global::Mono.Unix.Catalog.GetString ("_Выход"), global::Mono.Unix.Catalog.GetString ("Выход"), "gtk-quit");
		this.quitAction1.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Выход");
		w1.Add (this.quitAction1, null);
		this.Edit = new global::Gtk.Action ("Edit", global::Mono.Unix.Catalog.GetString ("Правка"), null, null);
		this.Edit.ShortLabel = global::Mono.Unix.Catalog.GetString ("Правка");
		w1.Add (this.Edit, null);
		this.Undo = new global::Gtk.Action ("Undo", global::Mono.Unix.Catalog.GetString ("_Отменить"), null, "gtk-undo");
		this.Undo.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Отменить");
		w1.Add (this.Undo, null);
		this.Redo = new global::Gtk.Action ("Redo", global::Mono.Unix.Catalog.GetString ("Вернуть"), null, "gtk-redo");
		this.Redo.ShortLabel = global::Mono.Unix.Catalog.GetString ("Вернуть");
		w1.Add (this.Redo, null);
		this.Cut = new global::Gtk.Action ("Cut", global::Mono.Unix.Catalog.GetString ("Вырезать"), null, "gtk-cut");
		this.Cut.ShortLabel = global::Mono.Unix.Catalog.GetString ("Вырезать");
		w1.Add (this.Cut, null);
		this.Copy = new global::Gtk.Action ("Copy", global::Mono.Unix.Catalog.GetString ("Копировать"), null, "gtk-copy");
		this.Copy.ShortLabel = global::Mono.Unix.Catalog.GetString ("Копировать");
		w1.Add (this.Copy, null);
		this.Paste = new global::Gtk.Action ("Paste", global::Mono.Unix.Catalog.GetString ("Вставить"), null, "gtk-paste");
		this.Paste.ShortLabel = global::Mono.Unix.Catalog.GetString ("Вставить");
		w1.Add (this.Paste, null);
		this.TestCompile = new global::Gtk.Action ("TestCompile", global::Mono.Unix.Catalog.GetString ("Компоновать"), null, "gtk-execute");
		this.TestCompile.ShortLabel = global::Mono.Unix.Catalog.GetString ("Компоновать");
		w1.Add (this.TestCompile, null);
		this.TestDecompile = new global::Gtk.Action ("TestDecompile", global::Mono.Unix.Catalog.GetString ("Декомпиляция"), null, "gtk-refresh");
		this.TestDecompile.ShortLabel = global::Mono.Unix.Catalog.GetString ("Декомпиляция");
		w1.Add (this.TestDecompile, null);
		this.TestTitle = new global::Gtk.Action ("TestTitle", global::Mono.Unix.Catalog.GetString ("Название"), null, "gtk-edit");
		this.TestTitle.ShortLabel = global::Mono.Unix.Catalog.GetString ("Название");
		w1.Add (this.TestTitle, null);
		this.setAuthorAction = new global::Gtk.Action ("setAuthorAction", global::Mono.Unix.Catalog.GetString ("Автор"), null, "gtk-italic");
		this.setAuthorAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Автор");
		w1.Add (this.setAuthorAction, null);
		this.addValueAction = new global::Gtk.Action ("addValueAction", global::Mono.Unix.Catalog.GetString ("_Баллы"), global::Mono.Unix.Catalog.GetString ("Баллы на вопрос"), "gtk-zoom-100");
		this.addValueAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Баллы");
		w1.Add (this.addValueAction, null);
		this.AddQuestion = new global::Gtk.Action ("AddQuestion", global::Mono.Unix.Catalog.GetString ("Добавить вопрос"), null, "gtk-dialog-question");
		this.AddQuestion.ShortLabel = global::Mono.Unix.Catalog.GetString ("Добавить вопрос");
		w1.Add (this.AddQuestion, null);
		this.addAnswer = new global::Gtk.Action ("addAnswer", global::Mono.Unix.Catalog.GetString ("Добавить ответ"), null, "gtk-add");
		this.addAnswer.ShortLabel = global::Mono.Unix.Catalog.GetString ("Добавить ответ");
		w1.Add (this.addAnswer, null);
		this.AddAnswerTrue = new global::Gtk.Action ("AddAnswerTrue", global::Mono.Unix.Catalog.GetString ("Добавить правильный ответ"), null, "gtk-yes");
		this.AddAnswerTrue.ShortLabel = global::Mono.Unix.Catalog.GetString ("Добавить правильный ответ");
		w1.Add (this.AddAnswerTrue, null);
		this.SetQuestionValue = new global::Gtk.Action ("SetQuestionValue", global::Mono.Unix.Catalog.GetString ("Назначить баллы"), null, "gtk-zoom-100");
		this.SetQuestionValue.ShortLabel = global::Mono.Unix.Catalog.GetString ("Назначить баллы");
		w1.Add (this.SetQuestionValue, null);
		this.removeAction = new global::Gtk.Action ("removeAction", global::Mono.Unix.Catalog.GetString ("Удалить ответ"), global::Mono.Unix.Catalog.GetString ("Удалить ответ"), "gtk-remove");
		this.removeAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Удалить ответ");
		w1.Add (this.removeAction, null);
		this.deleteQuestion = new global::Gtk.Action ("deleteQuestion", global::Mono.Unix.Catalog.GetString ("Удалить вопрос"), global::Mono.Unix.Catalog.GetString ("Удалить вопрос"), "gtk-delete");
		this.deleteQuestion.ShortLabel = global::Mono.Unix.Catalog.GetString ("Удалить вопрос");
		w1.Add (this.deleteQuestion, null);
		this.rmQuestion = new global::Gtk.Action ("rmQuestion", global::Mono.Unix.Catalog.GetString ("Удалить вопрос"), null, "gtk-delete");
		this.rmQuestion.ShortLabel = global::Mono.Unix.Catalog.GetString ("Удалить вопрос");
		w1.Add (this.rmQuestion, null);
		this.rmAnswer = new global::Gtk.Action ("rmAnswer", global::Mono.Unix.Catalog.GetString ("Удалить ответ"), null, "gtk-remove");
		this.rmAnswer.ShortLabel = global::Mono.Unix.Catalog.GetString ("Удалить ответ");
		w1.Add (this.rmAnswer, null);
		this.sortAscendingAction = new global::Gtk.Action ("sortAscendingAction", global::Mono.Unix.Catalog.GetString ("Время прохождения теста"), null, "gtk-sort-ascending");
		this.sortAscendingAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Время прохождения теста");
		w1.Add (this.sortAscendingAction, null);
		this.TestModeAction = new global::Gtk.ToggleAction ("TestModeAction", global::Mono.Unix.Catalog.GetString ("Строгий режим"), null, "gtk-dialog-warning");
		this.TestModeAction.Active = true;
		this.TestModeAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Строгий режим");
		w1.Add (this.TestModeAction, null);
		this.setTestMode = new global::Gtk.ToggleAction ("setTestMode", global::Mono.Unix.Catalog.GetString ("Строгий"), global::Mono.Unix.Catalog.GetString ("Строгий режим"), "gtk-no");
		this.setTestMode.Active = true;
		this.setTestMode.ShortLabel = global::Mono.Unix.Catalog.GetString ("Строгий");
		w1.Add (this.setTestMode, null);
		this.setTestTime = new global::Gtk.Action ("setTestTime", global::Mono.Unix.Catalog.GetString ("Время теста"), global::Mono.Unix.Catalog.GetString ("Время теста"), "gtk-sort-ascending");
		this.setTestTime.ShortLabel = global::Mono.Unix.Catalog.GetString ("Время теста");
		w1.Add (this.setTestTime, null);
		this.UIManager.InsertActionGroup (w1, 0);
		this.AddAccelGroup (this.UIManager.AccelGroup);
		this.Name = "MainWindow";
		this.Title = global::Mono.Unix.Catalog.GetString ("MyTest Creator");
		this.WindowPosition = ((global::Gtk.WindowPosition)(4));
		this.DefaultWidth = 1250;
		// Container child MainWindow.Gtk.Container+ContainerChild
		this.vbox3 = new global::Gtk.VBox ();
		this.vbox3.Name = "vbox3";
		this.vbox3.Spacing = 6;
		// Container child vbox3.Gtk.Box+BoxChild
		this.UIManager.AddUiFromString ("<ui><menubar name='MainMenu'><menu name='FileMenu' action='FileMenu'><menuitem name='New' action='New'/><menuitem name='Open' action='Open'/><menuitem name='Save' action='Save'/><menuitem name='SaveAs' action='SaveAs'/><separator/><menuitem name='Quit' action='Quit'/></menu><menu name='TestMenu' action='TestMenu'><menuitem name='TestTitle' action='TestTitle'/><menuitem name='setAuthorAction' action='setAuthorAction'/><separator/><menuitem name='sortAscendingAction' action='sortAscendingAction'/><menuitem name='TestModeAction' action='TestModeAction'/><separator/><menuitem name='AddQuestion' action='AddQuestion'/><menuitem name='rmQuestion' action='rmQuestion'/><menuitem name='SetQuestionValue' action='SetQuestionValue'/><menuitem name='addAnswer' action='addAnswer'/><menuitem name='rmAnswer' action='rmAnswer'/><separator/><menuitem name='TestCompile' action='TestCompile'/><menuitem name='TestDecompile' action='TestDecompile'/></menu><menu name='Help' action='Help'><menuitem name='Help1' action='Help1'/><menuitem name='About' action='About'/></menu></menubar></ui>");
		this.MainMenu = ((global::Gtk.MenuBar)(this.UIManager.GetWidget ("/MainMenu")));
		this.MainMenu.Name = "MainMenu";
		this.vbox3.Add (this.MainMenu);
		global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.vbox3 [this.MainMenu]));
		w2.Position = 0;
		w2.Expand = false;
		w2.Fill = false;
		// Container child vbox3.Gtk.Box+BoxChild
		this.UIManager.AddUiFromString ("<ui><toolbar name='ToolBar'><toolitem name='newAction' action='newAction'/><toolitem name='openAction' action='openAction'/><toolitem name='saveAction' action='saveAction'/><separator/><toolitem name='setTestTime' action='setTestTime'/><toolitem name='setTestMode' action='setTestMode'/><separator/><toolitem name='dialogQuestionAction' action='dialogQuestionAction'/><toolitem name='deleteQuestion' action='deleteQuestion'/><toolitem name='addValueAction' action='addValueAction'/><toolitem name='addAction' action='addAction'/><toolitem name='removeAction' action='removeAction'/><separator/><toolitem name='testCompileAction' action='testCompileAction'/><toolitem name='testDecompileAction' action='testDecompileAction'/><separator/><toolitem name='quitAction1' action='quitAction1'/></toolbar></ui>");
		this.ToolBar = ((global::Gtk.Toolbar)(this.UIManager.GetWidget ("/ToolBar")));
		this.ToolBar.Name = "ToolBar";
		this.ToolBar.ShowArrow = false;
		this.ToolBar.ToolbarStyle = ((global::Gtk.ToolbarStyle)(2));
		this.ToolBar.IconSize = ((global::Gtk.IconSize)(4));
		this.vbox3.Add (this.ToolBar);
		global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.vbox3 [this.ToolBar]));
		w3.Position = 1;
		w3.Expand = false;
		w3.Fill = false;
		// Container child vbox3.Gtk.Box+BoxChild
		this.vpaned1 = new global::Gtk.VPaned ();
		this.vpaned1.CanFocus = true;
		this.vpaned1.Name = "vpaned1";
		this.vpaned1.Position = 204;
		// Container child vpaned1.Gtk.Paned+PanedChild
		this.GtkScrolledWindow = new global::Gtk.ScrolledWindow ();
		this.GtkScrolledWindow.Name = "GtkScrolledWindow";
		this.GtkScrolledWindow.ShadowType = ((global::Gtk.ShadowType)(1));
		// Container child GtkScrolledWindow.Gtk.Container+ContainerChild
		this.QuestionEditArea = new global::Gtk.TreeView ();
		this.QuestionEditArea.CanFocus = true;
		this.QuestionEditArea.Name = "QuestionEditArea";
		this.GtkScrolledWindow.Add (this.QuestionEditArea);
		this.vpaned1.Add (this.GtkScrolledWindow);
		global::Gtk.Paned.PanedChild w5 = ((global::Gtk.Paned.PanedChild)(this.vpaned1 [this.GtkScrolledWindow]));
		w5.Resize = false;
		// Container child vpaned1.Gtk.Paned+PanedChild
		this.GtkScrolledWindow1 = new global::Gtk.ScrolledWindow ();
		this.GtkScrolledWindow1.Name = "GtkScrolledWindow1";
		this.GtkScrolledWindow1.ShadowType = ((global::Gtk.ShadowType)(1));
		// Container child GtkScrolledWindow1.Gtk.Container+ContainerChild
		this.AnswersEditArea = new global::Gtk.TreeView ();
		this.AnswersEditArea.CanFocus = true;
		this.AnswersEditArea.Name = "AnswersEditArea";
		this.GtkScrolledWindow1.Add (this.AnswersEditArea);
		this.vpaned1.Add (this.GtkScrolledWindow1);
		this.vbox3.Add (this.vpaned1);
		global::Gtk.Box.BoxChild w8 = ((global::Gtk.Box.BoxChild)(this.vbox3 [this.vpaned1]));
		w8.Position = 2;
		// Container child vbox3.Gtk.Box+BoxChild
		this.statusbar1 = new global::Gtk.Statusbar ();
		this.statusbar1.Name = "statusbar1";
		this.statusbar1.Spacing = 6;
		// Container child statusbar1.Gtk.Box+BoxChild
		this.vseparator2 = new global::Gtk.VSeparator ();
		this.vseparator2.Name = "vseparator2";
		this.statusbar1.Add (this.vseparator2);
		global::Gtk.Box.BoxChild w9 = ((global::Gtk.Box.BoxChild)(this.statusbar1 [this.vseparator2]));
		w9.Position = 1;
		w9.Expand = false;
		w9.Fill = false;
		// Container child statusbar1.Gtk.Box+BoxChild
		this.lblTestMode = new global::Gtk.Label ();
		this.lblTestMode.Name = "lblTestMode";
		this.lblTestMode.LabelProp = global::Mono.Unix.Catalog.GetString ("Режим: %s");
		this.statusbar1.Add (this.lblTestMode);
		global::Gtk.Box.BoxChild w10 = ((global::Gtk.Box.BoxChild)(this.statusbar1 [this.lblTestMode]));
		w10.Position = 2;
		w10.Expand = false;
		w10.Fill = false;
		// Container child statusbar1.Gtk.Box+BoxChild
		this.vseparator1 = new global::Gtk.VSeparator ();
		this.vseparator1.Name = "vseparator1";
		this.statusbar1.Add (this.vseparator1);
		global::Gtk.Box.BoxChild w11 = ((global::Gtk.Box.BoxChild)(this.statusbar1 [this.vseparator1]));
		w11.Position = 3;
		w11.Expand = false;
		w11.Fill = false;
		// Container child statusbar1.Gtk.Box+BoxChild
		this.lblTestTime = new global::Gtk.Label ();
		this.lblTestTime.Name = "lblTestTime";
		this.lblTestTime.LabelProp = global::Mono.Unix.Catalog.GetString ("Время теста, сек %s");
		this.statusbar1.Add (this.lblTestTime);
		global::Gtk.Box.BoxChild w12 = ((global::Gtk.Box.BoxChild)(this.statusbar1 [this.lblTestTime]));
		w12.Position = 4;
		w12.Expand = false;
		w12.Fill = false;
		this.vbox3.Add (this.statusbar1);
		global::Gtk.Box.BoxChild w13 = ((global::Gtk.Box.BoxChild)(this.vbox3 [this.statusbar1]));
		w13.Position = 3;
		w13.Expand = false;
		w13.Fill = false;
		this.Add (this.vbox3);
		if ((this.Child != null)) {
			this.Child.ShowAll ();
		}
		this.DefaultHeight = 768;
		this.Show ();
		this.DeleteEvent += new global::Gtk.DeleteEventHandler (this.OnDeleteEvent);
		this.newAction.Activated += new global::System.EventHandler (this.NewTestAction);
		this.openAction.Activated += new global::System.EventHandler (this.OpenTestAction);
		this.saveAction.Activated += new global::System.EventHandler (this.SaveTestAction);
		this.New.Activated += new global::System.EventHandler (this.NewTestAction);
		this.Open.Activated += new global::System.EventHandler (this.OpenTestAction);
		this.Save.Activated += new global::System.EventHandler (this.SaveTestAction);
		this.Quit.Activated += new global::System.EventHandler (this.QuitAction);
		this.SaveAs.Activated += new global::System.EventHandler (this.SaveTestAction);
		this.Help1.Activated += new global::System.EventHandler (this.HelpActionClicked);
		this.About.Activated += new global::System.EventHandler (this.AboutClick);
		this.dialogQuestionAction.Activated += new global::System.EventHandler (this.AddQuestionClick);
		this.testCompileAction.Activated += new global::System.EventHandler (this.CompileTestClick);
		this.addAction.Activated += new global::System.EventHandler (this.AddAnswerClick);
		this.testDecompileAction.Activated += new global::System.EventHandler (this.DecompileTestClick);
		this.quitAction1.Activated += new global::System.EventHandler (this.QuitAction);
		this.TestCompile.Activated += new global::System.EventHandler (this.CompileTestClick);
		this.TestDecompile.Activated += new global::System.EventHandler (this.DecompileTestClick);
		this.TestTitle.Activated += new global::System.EventHandler (this.TestNameEnter);
		this.setAuthorAction.Activated += new global::System.EventHandler (this.AuthorNameEnter);
		this.addValueAction.Activated += new global::System.EventHandler (this.SetValueClick);
		this.AddQuestion.Activated += new global::System.EventHandler (this.AddQuestionClick);
		this.addAnswer.Activated += new global::System.EventHandler (this.AddAnswerClick);
		this.SetQuestionValue.Activated += new global::System.EventHandler (this.SetValueClick);
		this.removeAction.Activated += new global::System.EventHandler (this.RemoveAnswerClick);
		this.deleteQuestion.Activated += new global::System.EventHandler (this.RemoveQuestionClick);
		this.rmQuestion.Activated += new global::System.EventHandler (this.RemoveQuestionClick);
		this.rmAnswer.Activated += new global::System.EventHandler (this.RemoveAnswerClick);
		this.sortAscendingAction.Activated += new global::System.EventHandler (this.SetTestTimeClick);
		this.TestModeAction.Toggled += new global::System.EventHandler (this.SetTestModeClick);
		this.setTestMode.Toggled += new global::System.EventHandler (this.SetTestModeClick);
		this.setTestTime.Activated += new global::System.EventHandler (this.SetTestTimeClick);
		this.QuestionEditArea.CursorChanged += new global::System.EventHandler (this.QuestionSelected);
	}
}
